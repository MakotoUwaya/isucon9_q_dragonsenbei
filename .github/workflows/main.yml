# デプロイ前に以下を secrets に設定する必要があります:
#
# * SSH_HOST_1 (and SSH_HOST_2, ...)
# * SSH_KEY
# * SSH_CONFIG
# * NEW_RELIC_API_KEY
# * NEW_RELIC_ACCOUNT_ID
# * NEW_RELIC_APPLICATION_ID_1 (and NEW_RELIC_APPLICATION_ID_2, ...)
# * DISCORD_WEBHOOK
#

name: "build/deploy artifact"
on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: golang:1.14.6-buster  # TODO EDIT BEFORE DEPLOY
    steps:
      - uses: actions/checkout@v1
      - name: build binary
        run: |
          cd ./webapp/go
          make
      - name: upload binary as artifact
        uses: actions/upload-artifact@v1
        with:
          name: executable
          path: webapp/go/binary
      - name: notify build failure
        uses: sarisia/actions-status-discord@v1
        if: failure()
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
  deploy:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: install credential
        env:
          SSH_KEY: ${{ secrets.SSH_KEY }}
          SSH_CONFIG: ${{ secrets.SSH_CONFIG }}
        run: |
          mkdir -p "$HOME/.ssh"
          echo "$SSH_KEY" > "$HOME/.ssh/id_rsa"
          chmod 400 "$HOME/.ssh/id_rsa"
          echo "$SSH_CONFIG" > "$HOME/.ssh/config"
      - name: download binary
        uses: actions/download-artifact@v1
        with:
          name: executable
          path: executable
##### 複数台にデプロイする場合はここから下をコピーする #####
      - name: create newelic deployment marker
        uses: newrelic/deployment-marker-action@v1
        with:
          apiKey: ${{ secrets.NEW_RELIC_API_KEY }}
          accountId: ${{ secrets.NEW_RELIC_ACCOUNT_ID }}
          applicationId: ${{ secrets.NEW_RELIC_APPLICATION_ID_1 }}
          revision: ${{ github.sha }}
          description: ${{ github.event.head_commit.message }}
      - name: deploy binary
        env:
          SSH_HOST: ${{ secrets.SSH_HOST_1 }}
        run: |  # TODO EDIT BEFORE DEPLOY
          ssh -o StrictHostKeyChecking=no "root@$SSH_HOST" "systemctl stop isucari"
          scp -o StrictHostKeyChecking=no executable/binary "root@$SSH_HOST:/home/isucon/go/src/github.com/isucon/isucon9-qualify/webapp/go/isucari"
          ssh -o StrictHostKeyChecking=no "root@$SSH_HOST" "chown isucon:isucon /home/isucon/go/src/github.com/isucon/isucon9-qualify/webapp/go/isucari"
          ssh -o StrictHostKeyChecking=no "root@$SSH_HOST" "systemctl start isucari"
##### 複数台にデプロイする場合はここから上をコピーする #####
      - name: finish deployment
        uses: sarisia/actions-status-discord@v1
        if: always()
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK }}
